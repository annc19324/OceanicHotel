USE OceanHotel;

-- Bảng Users (giữ nguyên từ bạn)
CREATE TABLE Users 
(
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL, -- Lưu password đã được hash
    email VARCHAR(100) UNIQUE NOT NULL,
    role ENUM('admin', 'user') DEFAULT 'user',
    avatar VARCHAR(255), -- Đường dẫn đến ảnh đại diện (có thể NULL)
    is_active BOOLEAN DEFAULT TRUE, -- Tài khoản có hoạt động hay không
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Bảng Rooms (giữ nguyên từ bạn)
CREATE TABLE Rooms 
(
    room_id INT AUTO_INCREMENT PRIMARY KEY,
    room_number VARCHAR(10) UNIQUE NOT NULL, -- Ví dụ: 101, 102, 201, 202,...
    room_type ENUM('Single', 'Double', 'Suite', 'Deluxe') NOT NULL,
    price_per_night DECIMAL(10, 2) NOT NULL, -- Giá phòng theo đêm
    is_available BOOLEAN DEFAULT TRUE, -- Phòng còn trống hay không
    description TEXT, -- Mô tả thêm về phòng (có thể NULL)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Bảng Bookings (giữ nguyên từ bạn)
CREATE TABLE Bookings
(
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Người đặt phòng
    room_id INT NOT NULL, -- Phòng được đặt
    check_in_date DATE NOT NULL, -- Ngày nhận phòng
    check_out_date DATE NOT NULL, -- Ngày trả phòng
    total_price DECIMAL(10, 2) NOT NULL, -- Tổng giá (tính từ số ngày và giá phòng)
    status ENUM('Pending', 'Confirmed', 'Cancelled') DEFAULT 'Pending', -- Trạng thái đặt phòng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (room_id) REFERENCES Rooms(room_id)
);

-- Bảng Booking_History (giữ nguyên từ bạn)
CREATE TABLE Booking_History 
(
    history_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT NOT NULL, -- Tham chiếu đến đặt phòng
    changed_by INT NOT NULL, -- Người thực hiện thay đổi (admin hoặc user)
    old_status ENUM('Pending', 'Confirmed', 'Cancelled'), -- Trạng thái cũ
    new_status ENUM('Pending', 'Confirmed', 'Cancelled'), -- Trạng thái mới
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Thời gian thay đổi
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id),
    FOREIGN KEY (changed_by) REFERENCES Users(user_id)
);

-- Bảng Room_Edit_History (giữ nguyên từ bạn)
CREATE TABLE Room_Edit_History 
(
    history_id INT AUTO_INCREMENT PRIMARY KEY,
    room_id INT NOT NULL, -- Tham chiếu đến phòng
    changed_by INT NOT NULL, -- Người thực hiện thay đổi (admin)
    change_description TEXT NOT NULL, -- Mô tả thay đổi (ví dụ: "Giá phòng thay đổi từ 500,000 VND lên 600,000 VND")
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Thời gian thay đổi
    FOREIGN KEY (room_id) REFERENCES Rooms(room_id),
    FOREIGN KEY (changed_by) REFERENCES Users(user_id)
);

-- Bảng Login_History (giữ nguyên từ bạn)
CREATE TABLE Login_History 
(
    login_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Tham chiếu đến người dùng
    login_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Thời gian đăng nhập
    ip_address VARCHAR(45), -- Địa chỉ IP
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Bảng Transactions (bổ sung từ tôi)
CREATE TABLE Transactions 
(
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT NOT NULL, -- Tham chiếu đến đặt phòng
    user_id INT NOT NULL, -- Người thực hiện giao dịch
    amount DECIMAL(10, 2) NOT NULL, -- Số tiền giao dịch
    status ENUM('Success', 'Failed', 'Pending') DEFAULT 'Pending', -- Trạng thái giao dịch
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Bảng Settings (bổ sung từ tôi)
CREATE TABLE Settings 
(
    setting_id INT AUTO_INCREMENT PRIMARY KEY,
    setting_key VARCHAR(50) NOT NULL UNIQUE, -- Ví dụ: 'default_language', 'default_theme'
    setting_value VARCHAR(255) NOT NULL, -- Ví dụ: 'en', 'light'
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
NetBeans IDE cho phát triển ứng dụng và quản lý dự án.
Maven để xây dựng và quản lý phụ thuộc.
Apache Tomcat 10.1 cho việc triển khai và chạy ứng dụng web.
Jakarta EE 10 Web làm nền tảng cho phát triển ứng dụng web Java.


1. Quản lý người dùng (Users)
•	Danh sách: Từ Users (username, email, role, is_active, created_at).
•	Chỉnh sửa: Thay đổi role, is_active, hoặc xóa user.
•	Lịch sử đăng nhập: Từ Login_History (login_time, ip_address).
2. Quản lý phòng (Rooms)
•	Danh sách: Từ Rooms (room_number, room_type, price_per_night, is_available).
•	Cập nhật: Thay đổi price_per_night, is_available, hoặc thêm phòng mới.
•	Lịch sử chỉnh sửa: Từ Room_Edit_History (change_description, changed_by, changed_at).
3. Quản lý đặt phòng (Bookings)
•	Danh sách: Từ Bookings (booking_id, user_id, room_id, check_in_date, check_out_date, total_price, status).
•	Cập nhật trạng thái: Thay đổi status (Pending → Confirmed/Cancelled).
•	Lịch sử thay đổi: Từ Booking_History (old_status, new_status, changed_by, changed_at).
4. Quản lý giao dịch (Transactions)
•	Danh sách: Từ Transactions (transaction_id, booking_id, amount, status, created_at).
•	Thống kê: Tổng doanh thu, số giao dịch thành công/thất bại.
5. Cấu hình hệ thống (Settings)
•	Cài đặt: Từ Settings (default_language, default_theme).
•	Áp dụng: Cập nhật giá trị trong Settings để thay đổi giao diện mặc định.
6. Báo cáo
•	Doanh thu: Tổng amount từ Transactions theo ngày/tháng.
•	Tỷ lệ sử dụng phòng: Đếm is_available từ Rooms và số Bookings Confirmed.


tôi sẽ cung cấp cho bạn các thông tin nữa, khi nào tôi bảo xong thì mới bắt đầu nghe lệnh tôi nhé